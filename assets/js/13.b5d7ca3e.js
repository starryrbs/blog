(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{262:function(e,s,n){"use strict";n.r(s);var t=n(2),a=Object(t.a)({},function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),n("p",[e._v("Node.js 是单进程单线程应用程序，但是因为 V8 引擎提供的异步执行回调接口，通过这些接口可以处理大量的并发，所以性能非常高。")]),e._v(" "),n("p",[e._v("Node.js 几乎每一个 API 都是支持回调函数的。")]),e._v(" "),n("p",[e._v("Node.js 基本上所有的事件机制都是用设计模式中观察者模式实现。")]),e._v(" "),n("p",[e._v("Node.js 单线程类似进入一个 while(true)的事件循环，直到没有事件观察者退出，每个异步事件都生成一个事件观察者，如果有事件发生就调用该回调函数.")]),e._v(" "),n("h2",{attrs:{id:"事件驱动程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事件驱动程序","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件驱动程序")]),e._v(" "),n("p",[e._v("Node.js 使用事件驱动模型，当 web server 接收到请求，就把它关闭然后进行处理，然后去服务下一个 web 请求。")]),e._v(" "),n("p",[e._v("当这个请求完成，它被放回处理队列，当到达队列开头，这个结果被返回给用户。")]),e._v(" "),n("p",[e._v("这个模型非常高效可扩展性非常强，因为 webserver 一直接受请求而不等待任何读写操作。（这也被称之为非阻塞式 IO 或者事件驱动 IO）")]),e._v(" "),n("p",[e._v("在事件驱动模型中，会生成一个主循环来监听事件，当检测到事件时触发回调函数。")]),e._v(" "),n("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2015/09/event_loop.jpg"}}),e._v(" "),n("p",[e._v("整个事件驱动的流程就是这么实现的，非常简洁。有点类似于观察者模式，事件相当于一个主题(Subject)，而所有注册到这个事件上的处理函数相当于观察者(Observer)。")]),e._v(" "),n("p",[e._v("Node.js 有多个内置的事件，我们可以通过引入 events 模块，并通过实例化 EventEmitter 类来绑定和监听事件，如下实例：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 引入 events 模块\nvar events = require('events');\n// 创建 eventEmitter 对象\nvar eventEmitter = new events.EventEmitter();\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("以下程序绑定事件处理程序：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 绑定事件及事件的处理程序\neventEmitter.on('eventName', eventHandler);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("我们可以通过程序触发事件：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 触发事件\neventEmitter.emit('eventName');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h3",{attrs:{id:"实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实例","aria-hidden":"true"}},[e._v("#")]),e._v(" 实例")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('const events = require("events");\nlet eventEmitter = new events.EventEmitter();\n\neventEmitter.on("connection", () => {\n  console.log("连接成功");\n  eventEmitter.emit("query_data");\n});\n\neventEmitter.on("query_data", () => {\n  console.log("数据接收成功");\n});\n\neventEmitter.emit("connection");\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br")])]),n("h2",{attrs:{id:"node-应用程序是如何工作的？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#node-应用程序是如何工作的？","aria-hidden":"true"}},[e._v("#")]),e._v(" Node 应用程序是如何工作的？")]),e._v(" "),n("p",[e._v("在 Node 应用程序中，执行异步操作的函数将回调函数作为最后一个参数， 回调函数接收错误对象作为第一个参数。")]),e._v(" "),n("p",[e._v("接下来让我们来重新看下前面的实例，创建一个 input.txt ,文件内容如下：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('var fs = require("fs");\n\nfs.readFile(\'input.txt\', function (err, data) {\n   if (err){\n      console.log(err.stack);\n      return;\n   }\n   console.log(data.toString());\n});\nconsole.log("程序执行完毕");\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("p",[e._v("以上程序中 fs.readFile() 是异步函数用于读取文件。 如果在读取文件过程中发生错误，错误 err 对象就会输出错误信息。")])])},[],!1,null,null,null);s.default=a.exports}}]);