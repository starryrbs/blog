(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{261:function(t,a,e){"use strict";e.r(a);var r=e(2),s=Object(r.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),e("h2",{attrs:{id:"设计模式分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计模式分类","aria-hidden":"true"}},[t._v("#")]),t._v(" 设计模式分类")]),t._v(" "),e("p",[t._v("1、创建型模式：创建对象的模式，抽象了实例化的过程。")]),t._v(" "),e("p",[t._v("2、结构型模式：解决怎样组装现有对象，设计交互方式，从而达到实现一定的功能目的。例如，以封装为目的的适配器和桥接，以扩展性为目的的代理、装饰器。")]),t._v(" "),e("p",[t._v("3、行为型模式：描述多个类或对象怎样交互以及怎样分配职责。")])])},[],!1,null,null,null);a.default=s.exports}}]);